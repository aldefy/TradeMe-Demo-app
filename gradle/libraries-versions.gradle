ext {
    buildToolsVersion = "28.0.3"
    minSdkVersion = 16
    targetSdkVersion = 28
    compileSdkVersion = 28
    androidGradlePluginVersion = '3.4.0'
    compilerVersion = "$androidGradlePluginVersion"
    kotlin_version = '1.3.21'


    versions = [
            coroutineVersion   : "1.1.1",
            support            : "1.0.2",
            okHttp             : "3.12.3",
            retrofit           : '2.5.0',
            dagger             : '2.22.1',
            glide              : '4.9.0',
            moshi              : '1.8.0',
            lifecycle          : '2.0.0',
            timber             : '4.7.1',
            logger             : '2.2.0',
            debugDB            : '1.0.4',
            playServicesVersion: "16.1.0",
            navigation         : "1.0.0-alpha09",
            room               : "2.0.0-alpha07",
            constrains         : "2.0.0-alpha2",
            mockitoCore        : '2.25.0',
            espressoVersion    : '3.0.2-alpha1',
            chuck              : '1.1.0',
            spek               : '1.1.5',
            powerMockMockito   : '1.6.5',
            powerMockMockito2  : '2.0.0',
            autoDispose        : "0.7.0"

    ]

    loggingDeps = [
            logger: "com.orhanobut:logger:$versions.logger",
            timber: "com.jakewharton.timber:timber:$versions.timber"
    ]

    constrainDeps = [
            constrainLayout: "androidx.constraintlayout:constraintlayout:$versions.constrains"
    ]

    supportDeps = [
            cardView         : "androidx.cardview:cardview:v1.0.0",
            appcompatV7      : "androidx.appcompat:appcompat:v1.0.0",
            design           : "com.google.android.material:material:1.0.0",
            recyclerView     : "androidx.recyclerview:recyclerview:1.0.0",
            supportAnnotation: "androidx.annotation:annotation:v1.0.0",
    ]

    archCompDeps = [
            runtime   : "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle",
            extensions: "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    ]

    daggerDeps = [
            dagger                : "com.google.dagger:dagger:$versions.dagger",
            dagger_android_support: "com.google.dagger:dagger-android-support:$versions.dagger",
            annotationJavaX       : "javax.annotation:jsr250-api:1.0"
    ]

    navigationDeps = [
            navigation_fragment: "androidx.navigation:navigation-fragment:$versions.navigation",
            navigation_ui      : "androidx.navigation:navigation-ui::$versions.navigation"
    ]

    imageGlideLibs = [
            glide       : "com.github.bumptech.glide:glide:$versions.glide",
            glide_okhttp: "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
    ]

    daggerCompilerDeps = [
            dagger_compiler         : "com.google.dagger:dagger-compiler:$versions.dagger",
            dagger_android_processor: "com.google.dagger:dagger-android-processor:$versions.dagger"
    ]

    glideCompilerDeps = [
            compiler : "com.github.bumptech.glide:compiler:$versions.glide"
    ]

    databaseDep = [
            roomRxjava2: "androidx.room:room-rxjava2:$versions.room",
            room       : "androidx.room:room-runtime:$versions.room"
    ]

    rxJavaDeps = [
            rxKotlin : "io.reactivex.rxjava2:rxkotlin:2.3.0",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:2.1.0",
            rx       : 'io.reactivex.rxjava2:rxjava:2.2.5'
    ]


    retrofit = [
            retrofit    : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter   : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            moshiAdapter: "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    ]

    okHttp = [
            logger: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
            okhttp: "com.squareup.okhttp3:okhttp:$versions.okHttp"
    ]

    chuck = [
            op: "com.readystatesoftware.chuck:library:$versions.chuck"
    ]

    chuck_noOp = [
            no_op: "com.readystatesoftware.chuck:library-no-op:$versions.chuck"
    ]

    moshiDeps = [
            moshiCore  : "com.squareup.moshi:moshi:$versions.moshi",
            moshiKotlin: "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    ]

    testDeps = [
            junit5  : "org.junit.jupiter:junit-jupiter-api:5.2.0",
            //   mockServer: "com.squareup.okhttp:mockwebserver:2.7.5",
            archCore: "android.arch.core:core-testing:1.1.1"
    ]

    testRuntimeDeps = [
            junit5: "org.junit.jupiter:junit-jupiter-engine:5.2.0"
    ]

    mockitoDeps = [
            mockitoCore   : "org.mockito:mockito-core:$versions.mockitoCore",
            mockitoAndroid: "org.mockito:mockito-android:2.25.0",
            mockitoInline : "org.mockito:mockito-inline:2.25.0",
            mockitoKotlin : "com.nhaarman:mockito-kotlin:1.6.0",
    ]

    autoDisposeDeps = [
            autoDispose       : "com.uber.autodispose:autodispose-kotlin:$versions.autoDispose",
            autoDisposeAndroid: "com.uber.autodispose:autodispose-android-kotlin:$versions.autoDispose",
            autoDisposeArch   : "com.uber.autodispose:autodispose-android-archcomponents-kotlin:$versions.autoDispose",
    ]

    supportLibs = supportDeps.values()
    networkLibs = retrofit.values() + okHttp.values() + moshiDeps.values()
    chuckLibs = chuck.values()
    chuckNoOpLibs = chuck_noOp.values()
    rxJavaLibs = rxJavaDeps.values()
    dbLib = databaseDep.values()
    daggerLibs = daggerDeps.values()
    archCompLibs = archCompDeps.values()
    imageLoadingLibs = imageGlideLibs.values()
    loggingLibs = loggingDeps.values()
    constrainLibs = constrainDeps.values()
    testLibs = testDeps.values()
    testRuntimeLibs = testRuntimeDeps.values()
    mockitoLibs = mockitoDeps.values()
    autoDisposeLibs = autoDisposeDeps.values()

    leakCannary = "com.squareup.leakcanary:leakcanary-android:1.5"
    daggerCompilerLibs = daggerCompilerDeps.values()
    imageLoadingCompileLibs = glideCompilerDeps.values()
    roomCompiler = "androidx.room:room-compiler:$versions.room"
    archCompCompiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
}

